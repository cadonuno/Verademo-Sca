# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - develop
    - master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode Analysis Center'
    veracodeAppProfile: 'Verademo ADO 3'
    version: 'Post-merge Scan: $(build.buildNumber)'
    filepath: './target/verademo.war'
    sandboxName: 'Release Candidate'
    failBuildIfUploadAndScanBuildStepFails: true
    importResults: true
    maximumWaitTime: '360'

- task: Veracode Flaw Importer@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode Analysis Center'
    veracodeAppProfile: 'Verademo ADO'
    sandboxName: 'Release Candidate'
    scanType: 'Dynamic and Static Analysis'
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Task'
    area: '$(system.teamProject)'
    overwriteAreaPathInWorkItemsOnImport: true
    iterationPath: '$(system.teamProject)'
    overwriteIterationPath: true
    flawImportLimit: '1000'